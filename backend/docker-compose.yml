version: "3.8"

services:
  db:
    image: postgres:14
    container_name: startify_db
    restart: always
    environment:
      POSTGRES_USER: startify_user
      POSTGRES_PASSWORD: startify_pass
      POSTGRES_DB: startify_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U startify_user -d startify_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  api:
    build: .
    container_name: startify_api
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://startify_user:startify_pass@db:5432/startify_db

volumes:
  postgres_data:






# version: "3.8"

# services:
#   db:
#     image: postgres:14
#     container_name: startify_db
#     restart: always
#     environment:
#       POSTGRES_USER: startify_user
#       POSTGRES_PASSWORD: startify_pass
#       POSTGRES_DB: startify_db
#     volumes:
#       - postgres_data:/var/lib/postgresql/data
#     ports:
#       - "5434:5432"

#   api:
#     build: .
#     container_name: startify_api
#     ports:
#       - "8000:8000"
#     depends_on:
#       - db
#     environment:
#       DATABASE_URL: postgresql://startify_user:startify_pass@db:5432/startify_db

# volumes:
#   postgres_data:






# version: "3.8"

# services:
#   db:
#     image: postgres:14
#     restart: always
#     container_name: startify_db
#     environment:
#       POSTGRES_USER: startify_user
#       POSTGRES_PASSWORD: startify_pass
#       POSTGRES_DB: startify_db
#     volumes:
#       - postgres_data:/var/lib/postgresql/data
#     ports:
#       - "5432:5432"

# volumes:
#   postgres_data:
